//
// Pagination.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct Pagination: Codable, Hashable {

    /** Total number of items that exist. */
    public var itemsTotal: Int?
    /** Number of items listed in the current page. */
    public var pagesTotal: Int?
    /** Maximum number of item per page. */
    public var pageSize: Int?
    /** The current page index. */
    public var currentPage: Int?
    /** The number of items on the current page. */
    public var currentPageItems: Int?
    public var links: [PaginationLink]

    public init(itemsTotal: Int? = nil, pagesTotal: Int? = nil, pageSize: Int? = nil, currentPage: Int? = nil, currentPageItems: Int? = nil, links: [PaginationLink]) {
        self.itemsTotal = itemsTotal
        self.pagesTotal = pagesTotal
        self.pageSize = pageSize
        self.currentPage = currentPage
        self.currentPageItems = currentPageItems
        self.links = links
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case itemsTotal
        case pagesTotal
        case pageSize
        case currentPage
        case currentPageItems
        case links
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(itemsTotal, forKey: .itemsTotal)
        try container.encodeIfPresent(pagesTotal, forKey: .pagesTotal)
        try container.encodeIfPresent(pageSize, forKey: .pageSize)
        try container.encodeIfPresent(currentPage, forKey: .currentPage)
        try container.encodeIfPresent(currentPageItems, forKey: .currentPageItems)
        try container.encode(links, forKey: .links)
    }
}

