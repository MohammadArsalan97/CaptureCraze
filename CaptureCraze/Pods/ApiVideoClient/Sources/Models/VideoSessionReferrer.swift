//
// VideoSessionReferrer.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct VideoSessionReferrer: Codable, Hashable {

    /** The link the viewer used to reach the video session. */
    public var url: String?
    /** How they arrived at the site, for example organic or paid. Organic meaning they found it themselves and paid meaning they followed a link from an advertisement. */
    public var medium: String?
    /** The source the referrer came from to the video session. For example if they searched through google to find the stream. */
    public var source: String?
    /** The search term they typed to arrive at the video session. */
    public var searchTerm: String?

    public init(url: String? = nil, medium: String? = nil, source: String? = nil, searchTerm: String? = nil) {
        self.url = url
        self.medium = medium
        self.source = source
        self.searchTerm = searchTerm
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case url
        case medium
        case source
        case searchTerm
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(url, forKey: .url)
        try container.encodeIfPresent(medium, forKey: .medium)
        try container.encodeIfPresent(source, forKey: .source)
        try container.encodeIfPresent(searchTerm, forKey: .searchTerm)
    }
}

