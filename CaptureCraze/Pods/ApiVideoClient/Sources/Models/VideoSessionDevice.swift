//
// VideoSessionDevice.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** What type of device the user is on when in the video session. */
public struct VideoSessionDevice: Codable, Hashable {

    /** What the type is like desktop, laptop, mobile. */
    public var type: String?
    /** If known, what the brand of the device is, like Apple, Dell, etc. */
    public var vendor: String?
    /** The specific model of the device, if known. */
    public var model: String?

    public init(type: String? = nil, vendor: String? = nil, model: String? = nil) {
        self.type = type
        self.vendor = vendor
        self.model = model
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case type
        case vendor
        case model
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(vendor, forKey: .vendor)
        try container.encodeIfPresent(model, forKey: .model)
    }
}

