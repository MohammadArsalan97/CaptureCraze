//
// LiveStreamSessionReferrer.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct LiveStreamSessionReferrer: Codable, Hashable {

    /** The website the viewer of the live stream was referred to in order to view the live stream. */
    public var url: String?
    /** The type of search that brought the viewer to the live stream. Organic would be they found it on their own, paid would be they found it via an advertisement. */
    public var medium: String?
    /** Where the viewer came from to see the live stream (usually where they searched from). */
    public var source: String?
    /** What term they searched for that led them to the live stream. */
    public var searchTerm: String?

    public init(url: String? = nil, medium: String? = nil, source: String? = nil, searchTerm: String? = nil) {
        self.url = url
        self.medium = medium
        self.source = source
        self.searchTerm = searchTerm
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case url
        case medium
        case source
        case searchTerm
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(url, forKey: .url)
        try container.encodeIfPresent(medium, forKey: .medium)
        try container.encodeIfPresent(source, forKey: .source)
        try container.encodeIfPresent(searchTerm, forKey: .searchTerm)
    }
}

