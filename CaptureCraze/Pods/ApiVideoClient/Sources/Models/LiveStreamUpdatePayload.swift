//
// LiveStreamUpdatePayload.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct LiveStreamUpdatePayload: Codable, Hashable {

    /** The name you want to use for your live stream. */
    public var name: String?
    /** BETA FEATURE Please limit all public = false (\"private\") livestreams to 3,000 users. Whether your video can be viewed by everyone, or requires authentication to see it. A setting of false will require a unique token for each view. */
    public var _public: Bool?
    /** Use this to indicate whether you want the recording on or off. On is true, off is false. */
    public var record: Bool?
    /** The unique ID for the player associated with a live stream that you want to update. */
    public var playerId: String?

    public init(name: String? = nil, _public: Bool? = nil, record: Bool? = nil, playerId: String? = nil) {
        self.name = name
        self._public = _public
        self.record = record
        self.playerId = playerId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case name
        case _public = "public"
        case record
        case playerId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(name, forKey: .name)
        try container.encodeIfPresent(_public, forKey: ._public)
        try container.encodeIfPresent(record, forKey: .record)
        try container.encodeIfPresent(playerId, forKey: .playerId)
    }
}

