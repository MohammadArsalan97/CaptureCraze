//
// UploadToken.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct UploadToken: Codable, Hashable {

    /** The unique identifier for the token you will use to authenticate an upload. */
    public var token: String?
    /** Time-to-live - how long the upload token is valid for. */
    public var ttl: Int?
    /** When the token was created, displayed in ISO-8601 format. */
    public var createdAt: Date?
    /** When the token expires, displayed in ISO-8601 format. */
    public var expiresAt: Date?

    public init(token: String? = nil, ttl: Int? = nil, createdAt: Date? = nil, expiresAt: Date? = nil) {
        self.token = token
        self.ttl = ttl
        self.createdAt = createdAt
        self.expiresAt = expiresAt
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case token
        case ttl
        case createdAt
        case expiresAt
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(token, forKey: .token)
        try container.encodeIfPresent(ttl, forKey: .ttl)
        try container.encodeIfPresent(createdAt, forKey: .createdAt)
        try container.encodeIfPresent(expiresAt, forKey: .expiresAt)
    }
}

