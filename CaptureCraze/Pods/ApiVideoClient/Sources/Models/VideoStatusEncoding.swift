//
// VideoStatusEncoding.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct VideoStatusEncoding: Codable, Hashable {

    /** Whether the video is playable or not. */
    public var playable: Bool?
    /** Available qualities the video can be viewed in. */
    public var qualities: [Quality]?
    public var metadata: VideoStatusEncodingMetadata?

    public init(playable: Bool? = nil, qualities: [Quality]? = nil, metadata: VideoStatusEncodingMetadata? = nil) {
        self.playable = playable
        self.qualities = qualities
        self.metadata = metadata
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case playable
        case qualities
        case metadata
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(playable, forKey: .playable)
        try container.encodeIfPresent(qualities, forKey: .qualities)
        try container.encodeIfPresent(metadata, forKey: .metadata)
    }
}

